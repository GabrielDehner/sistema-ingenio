/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Visual;


import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.FileNotFoundException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.*;
import javax.swing.event.TableModelEvent;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gabriel Dehner
 */
public class BuscarProductos extends javax.swing.JInternalFrame {
    
    private ControladoraVisual miVisual;
    //private ValidacionDeCampos unaValidacion = new ValidacionDeCampos();
    DefaultTableModel tablaArticulos /*= new DefaultTableModel()*/;
    DefaultTableModel tablaVacia;
    //List<Articulo> articulos = new LinkedList();
    List<Integer> cantidades = new LinkedList();
    int filaSeleccionada = -1;

    public BuscarProductos(ControladoraVisual miVisual) {
        try {
            UIManager.setLookAndFeel("com.sun.java.swing.plaf.nimbus.NimbusLookAndFeel");
        } catch (Exception e) {
            e.printStackTrace();
        }

        this.miVisual = miVisual;
        initComponents();
        String cabecera[] = {"Descripción", "Cantidad", "PrecioUnitario", "Subtotal"};
        String[][] datos = {};
        tablaArticulos = new DefaultTableModel(datos, cabecera);
        jTableArticulos.setModel(tablaArticulos);
        java.util.Date fecha = new Date();
        //dateFecha.setDate(fecha);
        //dateFecha.setEnabled(false);
        /*btnAgregar.setEnabled(false);
        btnQuitar.setEnabled(false);
        btnFinalizarVenta.setEnabled(false);
        txtTotal.setEnabled(false);
        txtTipoComprobante.setEnabled(false);
        txtIdArticulo.setEnabled(false);
        txtCantidad.setEnabled(false);
        jRadioBtnContado.setSelected(true);
        jRadioBtnCuentaCorriente.setSelected(false);*/
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTableArticulos = new javax.swing.JTable();
        btnBuscar = new javax.swing.JButton();
        txtNombre = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Venta de Insumos");

        jTableArticulos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6"
            }
        ));
        jTableArticulos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableArticulosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTableArticulos);

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        jLabel4.setText("Código de Barra");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45)
                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(208, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(140, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnBuscar)
                    .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(19, 19, 19)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 164, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void escribirTotal() {
        double total = 0;
        for (int i = 0; i < tablaArticulos.getRowCount(); i++) {
            total = total + (double) tablaArticulos.getValueAt(i, 3);
        }
       // txtTotal.setText(String.valueOf(total));
    }

   /* public boolean controlarNuevaFila(Articulo descripcion, int cantidad, double subtotal) throws ExceptionBusquedaCliente, ExceptionBusqueda {
        double total = 0;
        boolean retorno = true;
        double precioUnitario = 0;
        Articulo unArticulo;
        for (int i = 0; i < tablaArticulos.getRowCount(); i++) {

            unArticulo = ((Articulo) tablaArticulos.getValueAt(i, 0));
            if (unArticulo.isIdArticulo(descripcion.getIdArticulo())) {
                cantidad = cantidad + (Integer) tablaArticulos.getValueAt(i, 1);
                retorno = false;
                if (unArticulo.verificarEjemplaresNoVendidos(cantidad)) {
                    tablaArticulos.setValueAt(cantidad, i, 1);
                    precioUnitario = this.miVisual.precioDeVenta(this.miVisual.buscarArticulo(txtIdArticulo.getText()),
                            this.miVisual.buscarCliente(txtDniCliente.getText()).buscarTipoIvaDeCliente(), cantidad);
                    ///precioUNitario
                    tablaArticulos.setValueAt(precioUnitario, i, 2);
                    tablaArticulos.setValueAt((precioUnitario * cantidad), i, 3);
                    //total = total + (double) tablaArticulos.getValueAt(i, 3);
                    jTableArticulos.setModel(tablaArticulos);

                } else {

                    JOptionPane.showMessageDialog(null, "No hay suficientes ejemplares del artículo", "Error", HEIGHT, frameIcon);

                }
            } else {
                //total = total + (double) tablaArticulos.getValueAt(i, 3);
            }
        }
        //txtTotal.setText(String.valueOf(total));

        return retorno;
    }*/
    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
        /*Cliente unCliente;
        String tipoComp;
        boolean sePuede = false;
        List<String> datosValidos = new java.util.LinkedList();
        datosValidos.add(txtDniCliente.getText());
        if (!this.unaValidacion.validar(datosValidos, "Ingrese un dni para la búsqueda!")) {
            try {
                txtNombre.setText(this.miVisual.buscarCliente(txtDniCliente.getText()).getNombreORazon());
                txtTipoComprobante.setText(tipoComp = this.miVisual.buscarCliente(txtDniCliente.getText()).encontrarTipoComprobante());
                if (this.miVisual.buscarCliente(txtDniCliente.getText()) != null) {
                    sePuede = true;
                }
                txtTipoComprobante.enable(false);
            } catch (ExceptionBusquedaCliente ex) {
                JOptionPane.showMessageDialog(null, ex.getMensaje());
            }
        }*/

        /*if (sePuede) {
            btnAgregar.setEnabled(true);
            btnQuitar.setEnabled(true);
            btnFinalizarVenta.setEnabled(true);
            txtIdArticulo.setEnabled(true);
            txtCantidad.setEnabled(true);
        }*/

    }//GEN-LAST:event_btnBuscarActionPerformed

    private void jTableArticulosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableArticulosMouseClicked
        filaSeleccionada = jTableArticulos.getSelectedRow();
    }//GEN-LAST:event_jTableArticulosMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBuscar;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableArticulos;
    private javax.swing.JTextField txtNombre;
    // End of variables declaration//GEN-END:variables
}
